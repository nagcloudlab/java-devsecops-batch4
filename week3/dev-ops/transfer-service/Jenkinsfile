
pipeline{
    agent any
    stages{
       stage("Compile"){
         steps{
            dir("week3/dev-ops/transfer-service"){
                sh "./mvnw compile"
            }
         } 
        }
        stage("Test"){
         steps{
            dir("week3/dev-ops/transfer-service"){
                sh "./mvnw test"
            }
         }  
        }

         stage('üîêSonarQube Static Code Scan') {
              environment {
                SONAR_TOKEN = credentials('sonar-token')  // Store in Jenkins credentials
              }
              steps {
              dir("week3/dev-ops/transfer-service"){
                echo 'üì° Sending code to SonarQube for static analysis...'
                withSonarQubeEnv('SonarQube') {
                  sh """
                    ./mvnw verify sonar:sonar \
                      -Dsonar.projectKey=$SONAR_PROJECT_KEY \
                      -Dsonar.host.url=$SONAR_HOST_URL \
                      -Dsonar.login=$SONAR_TOKEN
                  """
                }
              }
            }
        }

        stage("Package"){
         steps{
            dir("week3/dev-ops/transfer-service"){
                sh "./mvnw package -DskipTests"
            }
         }  
        }

        stage('Deploy') {
            steps {
               withCredentials([file(credentialsId: 'nexus-cred-xml', variable: 'SETTINGS_XML')]) {
                    dir('week3/dev-ops/transfer-service') {
                        sh './mvnw deploy -DskipTests -s $SETTINGS_XML'
                    }
                }
            }
        }

    }

}